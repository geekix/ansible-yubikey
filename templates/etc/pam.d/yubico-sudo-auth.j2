#jinja2: trim_blocks: "true", lstrip_blocks: "false"
# Ansible managed file, do not edit directly
# yubikey pam config for sudoers
{% if yubikey_sudo_chal_rsp %}
{% set pam_yubico_settings = 'mode=challenge-response' %}
{% set first_pass_settings = '' %}
{% else %}
{% set pam_yubico_settings = 'mode=client id=' ~ yubikey_api_id ~ 'key=' ~ yubikey_api_key  %}
{% if not yubikey_sudo_and_pass %}
{% set first_pass_settings = 'use_first_passs' %}
{% endif %}
{% endif %}

{% if ansible_os_family == "RedHat" %}
auth        required                    pam_faildelay.so delay=2000000
{% endif %}
# can not be a system user
auth        requisite                   pam_succeed_if.so uid >= 1000 quiet_success
{% if yubikey_sudo_and_pass %}
# passsword auth
auth        requisite                   pam_unix.so nullok_secure
# auth with a yubikey
auth        [success=1 default=ignore]  pam_yubico.so {{ pam_yubico_settings }}
{% else %}
# passsword auth
auth        [success=2 default=ignore]  pam_unix.so nullok_secure
# auth with a yubikey
auth        [success=1 default=ignore]  pam_yubico.so {{ first_pass_settings }} {{ pam_yubico_settings }}
{% endif %}
# here's the fallback if no module succeeds
auth        requisite                   pam_deny.so
# prime the stack with a positive return value if there isn't one already;
# this avoids us returning an error just because nothing sets a success code
# since the modules above will each just jump around
auth        required                    pam_permit.so
{% if ansible_os_family != "Debian" %}
auth        required                    pam_env.so
{% endif %}
